# This is a basic workflow to help you get started with Actions

name: Build OpenSim and Godot
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  Build_Windows:
    name: Build OpenSim and Godot on Windows
    runs-on: windows-latest

    steps:
      - name: download OpenSim installation script
        run: curl.exe --output install_opensim.ps1 --url https://raw.githubusercontent.com/opensim-org/opensim-core/refs/heads/main/scripts/build/opensim-core-windows-build-script.ps1

      - name: verify the script was downloaded
        run: dir

      - name: run OpenSim installation script in Release configuration type, with two threads, and version 4.5
        shell: pwsh
        run: "& 'D:/a/Godosim/Godosim/install_opensim.ps1' -d Release -j 2 -c opensim_451"

      - name: print directory structure
        run: dir

      # download submodules; note that PAT is no longer required after the submodules go public, and expires in 90 days
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ SECRETS.PAT_submodules }}

      # Installs SCons
      - name: Install SCons
        run: python -m pip install scons

      - name: Run SCons to build Godot Engine
        run: |
          cd submodules/godot/
          scons shared_library=no vsproj=no platform=linuxbsd target=editor custom_modules=../godosim-cpp-modules opensim_install_dir="C:/OpenSim_4.5.1"

      - name: Create directory for artifact
        run: mkdir -p build-report/
      
      - uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: build-report/report.txt
          retention-days: 10


  
